#include <WiFi.h>
#include <PubSubClient.h>
#include <ArduinoJson.h>
#include <Stepper.h>
#include <HCSR04.h>

// WiFi Configuration
const char* ssid = "vodafone";
const char* password = "1223334444";

// MQTT Configuration (Free public broker)
const char* mqtt_server = "broker.hivemq.com";
const char* topic = "abdali/radar/data";

// Hardware Setup
const int stepsPerRevolution = 2048;
Stepper myStepper(stepsPerRevolution, 12, 14, 13, 15);
HCSR04 hc(5, 18); // TRIG, ECHO

WiFiClient espClient;
PubSubClient client(espClient);

void setup_wifi() {
    delay(10);
    Serial.println("\nConnecting to " + String(ssid));
    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
    }

    Serial.println("\nWiFi connected\nIP address: " + WiFi.localIP());
}

void reconnect() {
    while (!client.connected()) {
    Serial.print("Connecting to MQTT...");
    if (client.connect("ESP32Radar")) {
    Serial.println("connected");
    } else {
        Serial.print("failed, rc=");
        Serial.print(client.state());
        Serial.println(" retrying in 5s");
        delay(5000);
        }
    }
}

void setup() {
    Serial.begin(115200);
    myStepper.setSpeed(10);
    setup_wifi();
    client.setServer(mqtt_server, 1883);
}

void loop() {
    if (!client.connected()) reconnect();
    client.loop();

  // Scan 180 degrees
for(int angle = 0; angle <= 180; angle += 10) {
    myStepper.step(114); // 114 steps ≈ 10°
    delay(50);
    
    float distance = hc.dist();
    if(isnan(distance)) distance = 0;

    // Create JSON payload
    StaticJsonDocument<128> doc;
    doc["angle"] = angle;
    doc["distance"] = distance;
    doc["device"] = "radar-01";
    
    char payload[128];
    serializeJson(doc, payload);
    
    // Publish data
    client.publish(topic, payload);
    Serial.println("Published: " + String(payload));
}

  // Return to start position
myStepper.step(-stepsPerRevolution/2);
delay(3000);
}